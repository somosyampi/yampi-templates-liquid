{{ 'combo-products.css' | asset_url | stylesheet_tag }}
<script src="{{ 'combos.js' | asset_url }}" defer="defer"></script>

<script>
  const comboByKitId = {};
</script>

<section class="buy-together container">
  <div class="theme-title">{{ section.settings.title }}</div>  
  {% for combo in combos %}
    <combo-product class="buy-together-offer flex -between" data-combo-id="{{ combo.id }}">
      {% for product in combo.products.data %}
        <div class="buy-together-product" data-sku="{{ product.sku_id }}">
          <a href="{{ product.url_path }}" class="-clean">
            <div class="image">
              <img src="{{ product.images.data[0].url }}" />
            </div>
            <div class="buy-together-quantity">
              1 unidade
            </div>
            <p class="buy-together-product-name">{{ product.name }}</p>
          </a>
          
          {% if product.has_variations %}
            <select-sku>
              <div class="sku-select">
                <p class="helper-text">Selecione uma opção</p>
                {% for variation in product.variations.data %}
                  <div class="sku-option">
                    <label for="{{ variation.id }}-{{ variation.name }}">
                      {{ variation.name }}
                    </label>
                
                    <div class="custom-select">
                      <select
                        id="{{ variation.id }}-{{ variation.name }}"
                        name="{{ variation.id }}-{{ variation.name }}"
                      >
                        <option value="0" selected>Selecionar...</option>
                        {% for option in variation.values.data %}
                          <option value="{{ option.id }}">{{ option.value }}</option>
                        {% endfor %}
                      </select>
                      {% render 'icon-arrow' %}
                    </div>
                  </div>
                {% endfor %}
              </div>
            </select-sku>
            {% javascript %}
              document.querySelector('.buy-together-product[data-sku="{{product.sku_id}}"] select-sku').skus = {{ product.skus.data | json }}
            {% endjavascript %}
          {% endif %}
        </div>
        {% if forloop.last %}
          <div class="buy-together-equal">
            {% render 'icon-equal' %}
          </div> 
        {% else %}
          <div class="buy-together-plus">
            {% render 'icon-plus' %}
          </div>
        {% endif %}
      {% endfor %}
      <div class="buy-together-total">
        <div class="total-value">
          Valor total:
          <span class="old-price"></span>
        </div>
        <div class="final-value price"></div>
        <div class="discount-value"></div>
        {% render 'buy-button' %}
      </div>
    </combo-product>
    {% javascript %}
      comboByKitId[{{combo.id}}] = {{ combo | json }};
    {% endjavascript %}
  {% endfor %}
  {% javascript %}
    localStorage.setItem('comboCartGroup', JSON.stringify(comboByKitId));
  {% endjavascript %}
</section>

{% schema %}
{
  "name": "Seção de compre junto",
  "settings": [
    {
      "type": "text",
      "id": "buy_button_text",
      "label": "Texto do botão comprar (CTA)",
      "default": "Comprar"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Título",
      "default": "Compre junto e economize"
    },
    {
      "type": "checkbox",
      "id": "show_modal_after_purchase",
      "label": "Mostrar modal de “Produto adicionado ao carrinho” ao clicar no botão comprar",
      "default": "true"
    }
  ]
}
{% endschema %}
